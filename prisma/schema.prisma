generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String        @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  favourites     String[]
  accounts       Account[]
  listings       Listing[]
  reservations   Reservation[]
}

model Listing {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  category      String
  roomCount     Int
  childCount    Int
  guestCount    Int
  locationValue String
  price         Int
  user          User?         @relation(fields: [userId], references: [id])
  userId        String?       @db.ObjectId
  reservations  Reservation[]
}

model Reservation {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
  listingId  String   @db.ObjectId
  listing    Listing  @relation(fields: [listingId], references: [id])
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  scope             String?
  id_token          String?  @db.String
  token_type        String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}
